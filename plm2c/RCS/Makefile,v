head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	94.09.26.21.51.47;	author esr;	state Exp;
branches;
next	1.3;

1.3
date	94.09.26.21.50.39;	author esr;	state Exp;
branches;
next	1.2;

1.2
date	94.09.26.21.49.34;	author esr;	state Exp;
branches;
next	1.1;

1.1
date	94.09.26.21.21.55;	author esr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix the archive maker.
@
text
@# plm2c -- makefile for Unix

CSRCS =	convert.c	\
	parse.c		\
	declare.c	\
	decl_out.c	\
	control.c	\
	io.c		\
	token.c		\
	context.c	\
	mem.c		\
	error.c		\
	version.c	\
	main.c

OBJS =	convert.o	\
	parse.o		\
	declare.o	\
	decl_out.o	\
	control.o	\
	io.o		\
	token.o		\
	context.o	\
	mem.o		\
	error.o		\
	version.o	\
	main.o

TOKEN_HDRS = misc.h defs.h struct.h cvt.h cvt_id.h tokens.h
HDRS =	$(TOKEN_HDRS) tkn_defs.h tkn_ext.h
TEST = test.plm test.c.out
DOCS = README CAVEATS.DOC
SRCS = $(DOCS) FILES Makefile $(CSRCS) $(TOKEN_HDRS) $(TEST) makefile.ibm

OPTS = -c -O

plm2c:	$(OBJS)
	$(CC) -o plm2c $(OBJS)

convert.o:	convert.c $(TOKEN_HDRS)
	$(CC) $(OPTS) convert.c

parse.o:	parse.c $(TOKEN_HDRS) cvt_id.h
	$(CC) $(OPTS) parse.c

declare.o:	declare.c $(TOKEN_HDRS)
	$(CC) $(OPTS) declare.c

control.o:	control.c $(TOKEN_HDRS) tkn_ext.h
	$(CC) $(OPTS) control.c

decl_out.o:	decl_out.c $(TOKEN_HDRS)
	$(CC) $(OPTS) decl_out.c

io.o:	io.c $(TOKEN_HDRS) tkn_ext.h
	$(CC) $(OPTS) io.c

token.o:	token.c $(TOKEN_HDRS) tkn_ext.h
	$(CC) $(OPTS) token.c

context.o:	context.c $(TOKEN_HDRS)
	$(CC) $(OPTS) context.c

mem.o:	mem.c $(TOKEN_HDRS)
	$(CC) $(OPTS) mem.c

error.o:	error.c $(TOKEN_HDRS)
	$(CC) $(OPTS) error.c

version.o:	version.c
	$(CC) $(OPTS) version.c

main.o:	main.c $(TOKEN_HDRS) tkn_defs.h
	$(CC) $(OPTS) main.c

plm2c.tar: $(SRCS)
	tar -cvf plm2c.tar `cat FILES`

plm2c.tar.gz: plm2c.tar
	gzip plm2c.tar

lint:
	lint $(CSRCS)

clean:
	rm -f $(OBJS)
@


1.3
log
@Ooops...
@
text
@d77 1
a77 1
	tar -xvf plm2c.tar `cat FILES`
@


1.2
log
@Ready for Museum release.
@
text
@d32 1
a32 1
DOCS = MUSEUM.README README CAVEATS.DOC
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Makefile for Unix
d3 1
a3 1
SRCS =	convert.c	\
a28 2
LNKS =	convert parse declare decl_out control io token context mem error version main

d31 3
d76 5
a80 3
backup:
	cp $(HDRS) Makefile bak
	cp $(SRCS) bak
d83 1
a83 1
	lint $(SRCS)
@
